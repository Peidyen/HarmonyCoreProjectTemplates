
import Harmony.Core
import Harmony.Core.Context
import Harmony.OData
import Microsoft.AspNet.OData
import Microsoft.AspNet.OData.Extensions
import Microsoft.AspNet.OData.Builder
import Microsoft.AspNet.OData.Routing
import Microsoft.AspNetCore.Builder
import Microsoft.AspNetCore.Hosting
import Microsoft.AspNetCore.Http
import Microsoft.AspNetCore.Mvc
import Microsoft.AspNetCore.StaticFiles
import Microsoft.EntityFrameworkCore
import Microsoft.Extensions.Configuration
import Microsoft.Extensions.DependencyInjection
import Microsoft.Extensions.Logging
import Microsoft.Extensions.Options
import Microsoft.OData
import Microsoft.OData.Edm
import Microsoft.OData.UriParser
import Services.Models
import System
import System.Collections.Generic
import System.Linq
import System.Threading.Tasks

namespace Services

    public class Startup

        public setprivate property Configuration, @IConfiguration

        ;;; <summary>
        ;;; Constructor
        ;;; </summary>
        ;;; <param name="configuration">Configuration information.</param>
        public method Startup
            required in configuration, @IConfiguration
        proc
            this.Configuration = configuration
        endmethod

        ;;; <summary>
        ;;; This method gets called by the runtime.
        ;;; Use this method to add services to the dependency injection container.
        ;;; </summary>
        public method ConfigureServices, void
            required in services, @IServiceCollection 
        proc
            lambda dbContextOptions(contextOptions)
            begin
                contextOptions.UseInMemoryDatabase()
            end
            services.AddDbContext<BooksDbContext>(dbContextOptions)

            services.AddOdata()

            services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1)

        endmethod

        ;;; <summary>
        ;;; This method gets called by the runtime.
        ;;; Use this method to configure the HTTP request pipeline.
        ;;; </summary>
        public method Configure, void
            required in app, @IApplicationBuilder 
            required in env, @IHostingEnvironment
        proc
            ;;If we're in development mode, show detailed error messages
            if (env.IsDevelopment())
                app.UseDeveloperExceptionPage()

            ;;Specify OData options
            lambda odataOptions(options)
            begin
                data model = BooksEdmBuilder.GetEdmModel()
                ;;Enable $select expressions to select properties returned
                options.Select()
                ;;Enable $filter expressions to filter rows returned
                options.Filter()
                ;;Enable $orderby expressions to custom sort results
                options.OrderBy()
                ;;Enable /$count endpoints
                options.Count()
                ;;Enable $expand expressions to expand relations
                options.Expand()
                ;;Specify the maximum rows that may be returned by $top expressions
                options.MaxTop(100)
                ;;Configure the OData route
                options.MapODataServiceRoute("odata","odata",model)
            end

            ;;Enable MVC
            app.UseMvc(odataOptions)

            ;;Allow the server to serve static files
            app.UseDefaultFiles()
            app.UseStaticFiles()

        endmethod

    endclass

endnamespace
